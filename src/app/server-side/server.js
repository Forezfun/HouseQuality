const util = require('util');
const { MongoClient } = require('mongodb');
const express = require('express');
const bodyParser = require('body-parser');
const cors = require('cors');
let db
// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è MongoDB
const DB_RS = 'rs01';
const DB_NAME = 'db1';
const DB_HOSTS = ['rc1a-a125zcod66sllskf.mdb.yandexcloud.net:27018'];
const DB_USER = 'forezfun';
const DB_PASS = '4691forezfun';
const CACERT = 'root.crt';
// /home/kruk-german27/HouseQuality/src/app/server-side/
const MONGO_URI = util.format(
  'mongodb://%s:%s@%s/%s?replicaSet=%s&tls=true&tlsCAFile=%s',
  DB_USER,
  DB_PASS,
  DB_HOSTS.join(','),
  DB_NAME,
  DB_RS,
  CACERT
);

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
let dbClient;

async function connectToMongo() {
  try {
    dbClient = new MongoClient(MONGO_URI);
    await dbClient.connect();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ MongoDB');

    db = dbClient.db(DB_NAME);
    console.log(db)
    const collections = await db.listCollections().toArray();
    console.log('üìÇ –ö–æ–ª–ª–µ–∫—Ü–∏–∏ –≤ –±–∞–∑–µ:', collections.map(col => col.name));
    return db;
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB:', err.message);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
async function startServer() {
  const db = await connectToMongo();
  const app = express();

  // –ú–∏–¥–ª–≤–∞—Ä—ã
  app.use(cors());
  app.use(bodyParser.json());
  app.use(bodyParser.urlencoded({ extended: true }));

  // –ü–µ—Ä–µ–¥–∞—á–∞ –æ–±—ä–µ–∫—Ç–∞ –ë–î –≤ —Ä–æ—É—Ç—ã (–ª—É—á—à–µ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –≤ –Ω—É–∂–Ω—ã–µ)
  app.use((req, res, next) => {
    req.db = db;
    next();
  });

  // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–æ–≤
  app.use('/projects', require('./routes/projectRoutes'));
  app.use('/user', require('./routes/userRoutes'));
  app.use('/auth', require('./routes/authRoutes'));
  app.use('/avatar', require('./routes/imageAvatarRoutes'));
  app.use('/furniture/images', require('./routes/imagesFurnitureRoutes'));
  app.use('/furniture/card', require('./routes/furnitureCardRoutes'));
  app.use('/furniture/model', require('./routes/furnitureModelRoutes'));
  app.use('/shop', require('./routes/shopRoutes'));
  app.use('/finder', require('./routes/finderRoutes'));

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
  app.use((err, req, res, next) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', err.stack);
    res.status(500).json({ message: 'Internal Server Error' });
  });

  // –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
  const APP_PORT = 5000;
  app.listen(APP_PORT, () => {
    console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${APP_PORT}`);
  });

  // –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞
  process.on('SIGINT', async () => {
    console.log('\nüõë –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞...');
    if (dbClient) {
      await dbClient.close();
      console.log('‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å MongoDB –∑–∞–∫—Ä—ã—Ç–æ');
    }
    process.exit(0);
  });
}
async function getDb(){
  if (!db) {
    await startServer()
    return db
  }
  return db
}
// –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
startServer();
module.exports = { getDb }